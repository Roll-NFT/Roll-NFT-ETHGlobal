// SPDX-License-Identifier: GPL-3.0
pragma solidity ^0.8.4;

import "@openzeppelin/contracts/token/ERC721/IERC721.sol";

/**
 * @title ERC721 interface plus external Mint and Burn functions
 * @author Loizage
 * 
 * @dev safeMint() and burn() entry points made external
 * 
 * @notice Defines Mint and Burn functions
 */
interface IERC721RollTicket is IERC721 {

    /**
     * @dev Burn Roll participation token by it's ID
     * 
     * Requirements:
     * 
     * - the caller must have the `BURNER_ROLE`.
     * 
     * @param tokenId - ID of the token to burn
     */
    function burnToken(uint256 tokenId) external;
    
    /**
     * @dev Creates new Roll participation token for `to`. Its token ID will be automatically
     * assigned (and available on the emitted {IERC721-Transfer} event).
     * URI autogenerated based on the base URI passed at construction.
     *
     * Requirements:
     * 
     * - the caller must have the `MINTER_ROLE`.
     * 
     * @param to - address to be minted to
     * 
     * @return minted ticket ID
     */
    function mintToken(address to) external returns (uint256);
    
}